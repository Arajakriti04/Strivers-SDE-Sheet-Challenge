/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.
      if(head==NULL || k==0) 
      return head;
        
        int n = 1;
        
        Node* temp = head, *newhead;
        while(temp->next!=NULL){
            temp = temp->next;
            n++;
        }
        temp->next = head;
        
        k = k%n;
        int c=1;
     
        temp = head;
        while(c<n-k){
            temp = temp->next;
            c++;
        }
        
        head = temp->next;
        temp->next = NULL;
        
        return head;
}
